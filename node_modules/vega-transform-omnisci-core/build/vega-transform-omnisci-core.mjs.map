{"version":3,"file":"vega-transform-omnisci-core.mjs","sources":["../index.js"],"sourcesContent":["import { inherits, ingest, Transform } from \"vega\";\n\n/**\n * Generates a function to query data from an OmniSci Core database.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.query - The SQL query.\n */\nexport default function QueryCore(params) {\n  Transform.call(this, [], params);\n}\n\nQueryCore.session = function(session) {\n  if (session) {\n    this._session = session;\n    return this;\n  }\n\n  return this._session;\n};\n\nQueryCore.Definition = {\n  type: \"QueryCore\",\n  metadata: { changes: true, source: true },\n  params: [{ name: \"query\", type: \"string\", required: true }]\n};\n\nconst prototype = inherits(QueryCore, Transform);\n\nprototype.transform = async function(_, pulse) {\n    if (!QueryCore._session) {\n    throw Error(\n      \"OmniSci Core session missing. Please assign it to the vega transform by calling `QueryCore.session(session).`\"\n    );\n  }\n\n  const result = await QueryCore._session.queryAsync(_.query);\n\n  result.forEach(ingest);\n\n  const out = pulse.fork(pulse.NO_FIELDS & pulse.NO_SOURCE);\n  out.rem = this.value;\n  this.value = out.add = out.source = result;\n\n  return out;\n};\n"],"names":["QueryCore","params","Transform","call","this","session","_session","Definition","type","metadata","changes","source","name","required","inherits","transform","_","pulse","Error","queryAsync","query","result","forEach","ingest","out","fork","NO_FIELDS","NO_SOURCE","rem","_this2","value","add"],"mappings":"oEAQwBA,EAAUC,GAChCC,EAAUC,KAAKC,KAAM,GAAIH,GAG3BD,EAAUK,QAAU,SAASA,GAC3B,OAAIA,GACFD,KAAKE,SAAWD,aAINC,UAGdN,EAAUO,WAAa,CACrBC,KAAM,YACNC,SAAU,CAAEC,SAAS,EAAMC,QAAQ,GACnCV,OAAQ,CAAC,CAAEW,KAAM,QAASJ,KAAM,SAAUK,UAAU,KAGpCC,EAASd,EAAWE,GAE5Ba,mBAA2BC,EAAGC,aAY5Bb,KAXR,IAAKJ,EAAUM,SACf,MAAMY,MACJ,iHAHyC,uBAOxBlB,EAAUM,SAASa,WAAWH,EAAEI,sBAA/CC,GAENA,EAAOC,QAAQC,GAEf,IAAMC,EAAMP,EAAMQ,KAAKR,EAAMS,UAAYT,EAAMU,WAI/C,OAHAH,EAAII,IAAMC,EAAKC,MACfD,EAAKC,MAAQN,EAAIO,IAAMP,EAAIb,OAASU,EAE7BG,IAfT"}