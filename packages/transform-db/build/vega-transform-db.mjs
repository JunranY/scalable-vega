import{inherits as e,Transform as r,ingest as t}from"vega";var n=require("querystring");function o(e){r.call(this,[],e)}require("http"),o.type=function(e){return"Serverless"==e?(this._type=e,this):(this._type="Server",this._type)},o.setHttpOptions=function(e){return e?(this._httpOptions=e,this):this._httpOptions},o.QueryFunction=function(e){return e?(this._QueryFunction=e,this):this._QueryFunction},o.Definition={type:"dbtransform",metadata:{changes:!0,source:!0},params:[{name:"query",type:"string",required:!0}]},e(o,r).transform=function(e,r){try{var i,s=this,u=function(e){i.forEach(t);var n=r.fork(r.NO_FIELDS&r.NO_SOURCE);return n.rem=s.value,s._argval.toArray&&(i=[i[0].min,i[0].max]),s.value=n.add=n.source=i,n};if(!o._httpOptions&&!o._QueryFunction)throw Error("Core session or http option is missing. Please assign it to the Vega transform");var a="Serverless"==o._type?(r.dataflow.info("DuckDB Core Query: "+e.query),Promise.resolve(o._QueryFunction(e.query)).then(function(e){i=e})):function(){if("Server"!=o._type)throw Error("Core type hasn't been assigned. Please assign it to the Vega transform");var r=function(e,r){try{var t=e()}catch(e){return r(e)}return t&&t.then?t.then(void 0,r):t}(function(){return Promise.resolve(function(){try{var r=o._httpOptions;return Promise.resolve(fetch(r.url,{method:r.method,mode:r.mode,headers:r.headers,body:n.stringify({query:e.query})})).then(function(e){return e.ok?Promise.resolve(e.json()):Promise.resolve(e.json()).then(function(e){throw Error((e.error+": "+e.message).replace(/(\r\n|\n|\r)/gm,""))})})}catch(e){return Promise.reject(e)}}()).then(function(e){i=e})},function(e){console.log(e)});if(r&&r.then)return r.then(function(){})}();return Promise.resolve(a&&a.then?a.then(u):u())}catch(e){return Promise.reject(e)}};export{o as default};
//# sourceMappingURL=vega-transform-db.mjs.map
