var r=require("vega"),e=require("querystring");function t(e){r.Transform.call(this,[],e)}require("http"),t.setHttpOptions=function(r){return r?(this._httpOptions=r,this):this._httpOptions},t.Definition={type:"dbtransform",metadata:{changes:!0,source:!0},params:[{name:"relation",type:"string",required:!0}]},r.inherits(t,r.Transform).transform=function(o,n){try{var s=this,i=function(){a.forEach(r.ingest);var e=n.fork(n.NO_FIELDS&n.NO_SOURCE);return e.rem=Array.isArray(s.value)?s.value:[],console.log(e),"Extent"===s.__proto__.constructor.Definition.type&&(a=[a[0].min,a[0].max]),s.value=e.add=e.source=a,e};if(console.log(s),!t._httpOptions)throw Error("Vega Transform Postgres http options missing. Assign it with setHttpOptions.");if(!s._query)throw Error("Internal error: this._query should be defined");var a=[],u=function(r,e){try{var t=r()}catch(r){return e(r)}return t&&t.then?t.then(void 0,e):t}(function(){return s._sql=s._query(s,s._argval.from),console.log(s._sql),Promise.resolve(function(r){try{var o=t._httpOptions;return Promise.resolve(fetch(o.url,{method:o.method,mode:o.mode,headers:o.headers,body:e.stringify({query:r})})).then(function(r){return r.ok?Promise.resolve(r.json()):Promise.resolve(r.json()).then(function(r){throw Error((r.error+": "+r.message).replace(/(\r\n|\n|\r)/gm,""))})})}catch(r){return Promise.reject(r)}}(s._sql)).then(function(r){a=r})},function(r){console.log(r)});return Promise.resolve(u&&u.then?u.then(i):i())}catch(r){return Promise.reject(r)}},module.exports=t;
//# sourceMappingURL=vega-transform-db.js.map
